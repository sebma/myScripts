set listchars=tab:»»
if has("patch-7.4.710") | set listchars+=space:· | else | set listchars+=trail:· | endif
set listchars+=eol:¶
set listchars+=nbsp:☠
set title
set nopaste | set ruler
set nohls autoindent
set noexpandtab ts=4
set incsearch
syntax on

" Shortcut to rapidly toggle `set list` with CTRL+L
nmap <c-l> :set list!<CR>
nmap <c-t> :sort u<CR>
nmap <c-n> :set nu! \| :set ruler<CR>
nmap <F5> :e<CR>
map <F6> <C-W>w
nmap <F8> :TagbarToggle<CR>
"autocmd StdinReadPost * set buftype=nofile
autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif "Remember last cursor position
autocmd FileType xml setlocal equalprg=xmllint\ --format\ --recover\ -\ 2>/dev/null "Pretty print XML when '=G' is pressed
"let g:tagbar_ctags_bin = "$HOME/gnu/bin/ctags"
autocmd VimEnter * nested :call tagbar#autoopen(1) "open it only if you're opening Vim with a supported file/files
"autocmd FileType xml exe ":silent %!xmllint --format --recover - 2>/dev/null"
autocmd BufNewFile,BufRead *.octave set filetype=matlab

" Initialize plugin system
call plug#begin('~/.vim/plugged')
let g:plug_window = 'enew' "Open vim-plug without a split
Plug 'vim-scripts/AdvancedSorters'
Plug 'vim-scripts/ingo-library'
Plug 'vim-scripts/matchit.zip' "use % to travel Shell's if, else, elif, fi.
Plug 'vim-scripts/python_match.vim' " use % to travel Python's if, elif, etc.
Plug 'vim-scripts/tagbar'
Plug 'sbdchd/vim-shebang'
Plug 'sirjofri/vim-biblereader'
call plug#end()
